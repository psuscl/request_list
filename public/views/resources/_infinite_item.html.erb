<%
  indent_level = @result.raw.fetch('ancestors', []).length
%>
<div class="infinite-item infinite-item-indent-<%= indent_level %>">

<%# BEGIN request_list changes %>
  <div class="pull-right">
    <%= render partial: 'request_list/action_button', :locals => {:record => @result} %>
  </div>

<%# This is a proof of concept implementation of only showing the button on leaf nodes in the tree
    img with a blank source is used to generate an error which we catch in order to do our magic!
    There must be a cleaner way to do this. Other than that quick testing confirms this works nicely.
    Further testing is required to catch any edge cases or performance impacts.

    It works by checking the indent level of the previous item. If it is lower than the indent of the
    current item, then the prvious item cannot be a leaf, so we hide the button.

  <img src style="display:none" onerror="(function(e, obj) {
  var ir = $(obj).parents('.infinite-record-record');
  var i = $(obj).parents('.infinite-item');
  if (ir.prev().length > 0) {
    var pir = ir.prev();
    var p = pir.children('.infinite-item');
    pin = p.attr('class').match(/infinite-item-indent-(\d+)/)[1];
    if (!isNaN(pin)) {
      if (parseInt(pin) < parseInt(i.attr('class').match(/infinite-item-indent-(\d+)/)[1])) {
        p.find('.request_list_action_button').hide();
      }
    }
  }
})(event, this)
"/>
%>

<%# END   request_list changes %>

  <div class="information" style="overflow: hidden;">
    <%=
      render partial: 'shared/idbadge', locals: {
        :props => { :full => false, :infinite_item => true },
        :result => @result,
      }
    %>
  </div>

  <% scopecontent_note = @result.note('scopecontent') %>
  <% if scopecontent_note && !inherited?(scopecontent_note) %>
    <%= render partial: 'shared/single_note', locals: {:type => 'abstract', :note_struct => scopecontent_note, :notitle => true} %>
  <% end %>

  <dl class="dl-horizontal">

    <% accessrestrict_note = @result.note('accessrestrict') %>
    <% if accessrestrict_note && !accessrestrict_note['note_text'].blank? && !inherited?(accessrestrict_note) %>
      <dt><%= accessrestrict_note['label'] %></dt>
      <dd>
        <%= render partial: 'shared/single_note', locals: {:type => 'accessrestrict', :note_struct => accessrestrict_note, :notitle => true} %>
      </dd>
    <% end %>

    <% unless @result.dates.blank? || all_inherited?(@result.dates) %>
        <dt><%= t('resource._public.dates') %></dt>
        <% @result.dates.each do |date| %>
        <dd>
          <%= inheritance(date['_inherited']).html_safe %>
          <%= date['final_expression'] %>
        </dd>
        <% end %>
    <% end %>

    <% unless @result.extents.blank? || all_inherited?(@result.extents) %>
        <dt><%= t('resource._public.extent') %></dt>
        <% @result.extents.each do |extent| %>
          <dd>
            <%= inheritance(extent['_inherited']).html_safe %>
            <%= extent['display']%>
          </dd>
        <% end %>
    <% end %>

    <% unless @result.agents.blank? || all_inherited?(@result.agents.collect(&:last).flatten) %>
      <dt><%= t('pui_agent.related') %></dt>
        <% @result.agents.collect(&:last).flatten.each do |relationship| %>
          <dd>
            <%= link_to relationship.fetch('_resolved').fetch('title'), app_prefix(relationship.fetch('ref')) %>
          </dd>
        <% end %>
    <% end %>

    <% if @result.lang_materials %>
      <% @result.lang_materials.reject { |lm| inherited?(lm) }.each do |lang_material| %>
        <dt><%= t('resource._public.lang')%></dt>
        <dd><%= t('enumerations.language_iso639_2.' + lang_material['language']) %></dd>
        <% unless lang_material['script'].blank? %>
          <dt><%= t('resource._public.script')%></dt>
          <dd><%= t('enumerations.script_iso15924.' + lang_material['script']) %></dd>
        <% end %>
      <% end %>
    <% else %>
      <% langmaterial_note = @result.note('langmaterial') %>
      <% if langmaterial_note && !langmaterial_note['note_text'].blank? & !inherited?(langmaterial_note) %>
        <dt><%= t('resource._public.lang')%></dt>
        <dd>
          <%= render partial: 'shared/single_note', locals: {:type => 'langmaterial', :note_struct => langmaterial_note, :notitle => false} %>
        </dd>
      <% end %>
    <% end %>
  </dl>
</div>
